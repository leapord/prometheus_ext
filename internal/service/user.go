// ================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// You can delete these comments if you wish manually maintain this interface file.
// ================================================================================

package service

import (
	"context"

	model "github.com/leapord/prometheusx/internal/model/do"
)

type IUser interface {
	Login(ctx context.Context, loginName *string, password *string) (token string, err error)
	Regist(ctx context.Context, user *model.User) (err error)
	CheckUser(ctx context.Context, loginName string) bool
	Add(ctx context.Context, user model.User) (id int64, err error)
	Update(ctx context.Context, user model.User) (err error)
	Delete(ctx context.Context, id int) (user model.User, err error)
	Detail(ctx context.Context, id int) (user model.User, err error)
	Page(ctx context.Context, pageNo int, pageSize int, user model.User) (total int, users []model.User, err error)
}

var localUser IUser

func User() IUser {
	if localUser == nil {
		panic("implement not found for interface IUser, forgot register?")
	}
	return localUser
}

func RegisterUser(i IUser) {
	localUser = i
}
